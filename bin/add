#!/bin/bash
#
# Add columns to a CSV file that can be converted from existing columns
#
# Input dependencies:
#   Column "ts" (-t, -d, -w, -i options)
#   Column "nwCode" (-n option)
#
# Uses: R
#
# Daniel Weibel <daniel.weibel@unifr.ch> Mar. 2015
#------------------------------------------------------------------------------#

set -e

usage() {
cat <<EOF
Usage:
 ${0##*/} [-t] [-d] [-w] [-i] [-n] [-o file] [file]

Description:
 Add certain columns that can be converted from existing columns to a CSV file

Options:
 -t Add column "time" with time of day (converted from "ts")
 -d Add column "date" with date (convertd from "ts")
 -w Add column "day" with weekday (converted from "ts")
 -i Add column "interval" with timestamp interval in sec. (converted from "ts")
 -n Add column "nwType" with mobile network type (converted from "nwCode")
EOF
}
[[ "$1" == --help ]] && usage && exit

# Source common functions
dir() { local w=$(which ${0##*/}); dirname "${w:-$0}"; }
source "$(dir)/../lib/commons.sh"

# Make sure variables are empty
unset t d w i n o

while getopts ":tdwino:" opt; do
  case $opt in
    t) t=true ;;
    d) d=true ;;
    w) w=true ;;
    i) i=true ;;
    n) n=true ;;
    o) o=$OPTARG ;;
    \?) Abort "invalid option: -$OPTARG"             ;;
    :)  Abort "option -$OPTARG requires an argument" ;;
  esac
done
shift $(($OPTIND - 1))

[[ -n "$1" ]] && input="$1"
[[ -z "$1" ]] && input=$(TmpFile) && cat - >"$input"
CheckInput "$input"

r=$(TmpFile); rout=$(TmpFile)
cat <<EOF >"$r"
d <- ReadCSV("$input")
if ("$i" != "") d <- AddInterval(d)
if ("$t" != "") d <- AddTime(d)
if ("$d" != "") d <- AddDate(d)
if ("$w" != "") d <- AddWeekday(d)
if ("$n" != "") d <- AddNetworkType(d)
WriteCSV(d, "$rout")
EOF

MyRscript "$r"

if IsSet "$o"; then cat "$rout" >"$o"; else cat "$rout"; fi
