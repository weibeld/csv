#!/bin/bash
#
# Extract rows from a CSV file
#
# Input dependencies:
#   Any CSV file
#
# Uses: R
#
# Daniel Weibel <daniel.weibel@unifr.ch> Mar. 2015
#------------------------------------------------------------------------------#

usage() {
cat <<EOF
Usage:
 ${0##*/} -c condition [-o file] [file]

Description:
 Extract rows from a CSV file. The condition has to be specified in R syntax.

Options:
 -c Condition for rows to print in R syntax

Example:
 Extract rows from Mondays that have a "lat" and "lon" value
   ${0##*/} -c 'day == "Mon" & !is.na(lat) & !is.na(lon)' cids.csv
EOF
}
[[ "$1" == --help ]] && usage && exit

# Source common functions
dir() { local w=$(which ${0##*/}); dirname "${w:-$0}"; }
source "$(dir)/../lib/commons.sh"

while getopts ":c:o:" opt; do
  case $opt in
    c) c=$OPTARG ;;
    o) o=$OPTARG ;;
    \?) abort "invalid option: -$OPTARG"             ;;
    :)  abort "option -$OPTARG requires an argument" ;;
  esac
done
shift $(($OPTIND - 1))

[[ -n "$1" ]] && input="$1"
[[ -z "$1" ]] && input=$(TmpFile) && cat - >"$input"
CheckInput "$input"

r=$(TmpFile); rout=$(TmpFile)
cat <<EOF >"$r"
d <- ReadCSV("$input")
WriteCSV(with(d, d[$c,]), "$rout")
EOF

MyRscript "$r"
IsSet "$o" && cat "$rout" >"$o" || cat "$rout"
